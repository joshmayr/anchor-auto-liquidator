import { BlockTxBroadcastResult, Coins, Msg, Numeric, Fee, Wallet } from '@terra-money/terra.js';
import { Fabricator, OmitAddress } from '..';
import { AddressProvider } from '../address-provider';
export interface OperationGasParameters {
    fee?: Fee;
    gasPrices?: Coins.Input;
    gasAdjustment?: Numeric.Input;
}
export interface Operation {
    generateWithAddress(address: string): Msg[];
    generateWithWallet(wallet: Wallet): Msg[];
    execute(wallet: Wallet, gasParameters: OperationGasParameters): Promise<BlockTxBroadcastResult>;
}
export declare class OperationImpl<FabricatorInputType> implements Operation {
    private _fabricator;
    private _option;
    private _addressProvider;
    constructor(fabricator: Fabricator<FabricatorInputType>, option: OmitAddress<FabricatorInputType>, addressProvider: AddressProvider);
    generateWithAddress(address: string): Msg[];
    generateWithWallet(wallet: Wallet): Msg[];
    execute(wallet: Wallet, { fee, gasPrices, gasAdjustment }?: OperationGasParameters): Promise<BlockTxBroadcastResult>;
}
