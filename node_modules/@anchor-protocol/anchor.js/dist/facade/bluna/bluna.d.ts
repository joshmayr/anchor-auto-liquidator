import { LCDClient } from '@terra-money/terra.js';
import { AddressProvider } from '../../address-provider';
import { fabricatebAssetBond, fabricatebAssetClaimRewards, fabricatebAssetUnbond, fabricateExchangeSwapbLuna, OmitAddress, OptionType } from '../../fabricators';
import { UnbondResponse } from '../../queries';
import { Operation } from '../operation';
export declare type BlunaMintOption = OptionType<typeof fabricatebAssetBond>;
export declare type BlunaBurnOption = OptionType<typeof fabricatebAssetUnbond>;
export declare type BlunaInstantBurnOption = OptionType<typeof fabricateExchangeSwapbLuna>;
export declare type BlunaClaimRewardsOption = OptionType<typeof fabricatebAssetClaimRewards>;
export interface BlunaQueriesOption {
    address: string;
}
export declare class BLuna {
    private _lcd;
    private _addressProvider;
    constructor(lcd: LCDClient, addressProvider: AddressProvider);
    mint(mintOption: OmitAddress<BlunaMintOption>): Operation;
    burn(burnOption: OmitAddress<BlunaBurnOption>): Operation;
    instantBurn(instantiateBurnOption: OmitAddress<BlunaInstantBurnOption>): Operation;
    withdraw(): Operation;
    claim(claimOptions: OmitAddress<BlunaClaimRewardsOption>): Operation;
    getUnbondRequests(getUnbondRequestsOption: BlunaQueriesOption): Promise<UnbondResponse>;
    getClaimableRewards(getClaimableRewardsOption: BlunaQueriesOption): Promise<string>;
}
