"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fabricateCustodyDepositCollateral = void 0;
const terra_js_1 = require("@terra-money/terra.js");
const create_hook_msg_1 = require("../../utils/cw20/create-hook-msg");
const validate_input_1 = require("../../utils/validate-input");
const address_1 = require("../../utils/validation/address");
const number_1 = require("../../utils/validation/number");
const provider_1 = require("../../address-provider/provider");
const fabricateCustodyDepositCollateral = ({ address, market, collateral, amount }) => (addressProvider) => {
    (0, validate_input_1.validateInput)([
        (0, address_1.validateAddress)(address),
        (0, number_1.validateIsGreaterThanZero)(amount),
    ]);
    let bAssetTokenContract = addressProvider.bLunaToken();
    if (collateral == provider_1.COLLATERAL_DENOMS.UBETH) {
        bAssetTokenContract = addressProvider.bEthToken();
    }
    const custodyContract = addressProvider.custody(market, collateral);
    // cw20 send + provide_collateral hook
    return [
        // provide_collateral call
        new terra_js_1.MsgExecuteContract(address, bAssetTokenContract, {
            send: {
                contract: custodyContract,
                amount: new terra_js_1.Int(new terra_js_1.Dec(amount).mul(1000000)).toString(),
                msg: (0, create_hook_msg_1.createHookMsg)({
                    deposit_collateral: {},
                }),
            },
        }),
    ];
};
exports.fabricateCustodyDepositCollateral = fabricateCustodyDepositCollateral;
//# sourceMappingURL=custody-deposit-collateral.js.map