"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fabricateOverseerLockBETHCollateral = void 0;
const terra_js_1 = require("@terra-money/terra.js");
const validate_input_1 = require("../../utils/validate-input");
const address_1 = require("../../utils/validation/address");
const number_1 = require("../../utils/validation/number");
/**
 *
 * @param address Clientâ€™s Terra address.
 * @param market Type of stablecoin money market to deposit collateral. Currently only supports UST.
 * @param amount Amount of collateral to deposit.
 */
const fabricateOverseerLockBETHCollateral = ({ address, market, amount }) => (addressProvider) => {
    (0, validate_input_1.validateInput)([
        (0, address_1.validateAddress)(address),
        (0, number_1.validateIsGreaterThanZero)(amount),
    ]);
    const mmOverseerContract = addressProvider.overseer(market);
    const bAssetTokenContract = addressProvider.bEthToken();
    return [
        // lock_collateral call
        new terra_js_1.MsgExecuteContract(address, mmOverseerContract, {
            // @see https://github.com/Anchor-Protocol/money-market-contracts/blob/master/contracts/overseer/src/msg.rs#L75
            lock_collateral: {
                collaterals: [
                    [
                        bAssetTokenContract,
                        new terra_js_1.Int(new terra_js_1.Dec(amount).mul(1000000)).toString(),
                    ],
                ],
            },
        }),
    ];
};
exports.fabricateOverseerLockBETHCollateral = fabricateOverseerLockBETHCollateral;
//# sourceMappingURL=overseer-lock-beth-collateral.js.map