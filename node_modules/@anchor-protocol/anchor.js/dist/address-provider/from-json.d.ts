import { AddressProvider, COLLATERAL_DENOMS, MARKET_DENOMS } from './provider';
export interface AddressMap {
    bLunaHub: string;
    bLunaToken: string;
    bLunaReward: string;
    bLunaAirdrop: string;
    bLunaValidatorsRegistry: string;
    bEthReward: string;
    bEthToken: string;
    mmInterestModel: string;
    mmOracle: string;
    mmMarket: string;
    mmOverseer: string;
    mmCustody: string;
    mmCustodyBEth: string;
    mmLiquidation: string;
    mmLiquidationQueue: string;
    mmDistributionModel: string;
    aTerra: string;
    bLunaLunaPair: string;
    bLunaLunaLPToken: string;
    ancUstPair: string;
    ancUstLPToken: string;
    gov: string;
    distributor: string;
    collector: string;
    community: string;
    staking: string;
    ANC: string;
    airdrop: string;
    investor_vesting: string;
    team_vesting: string;
}
export declare type AllowedAddressKeys = keyof AddressMap;
export declare class AddressProviderFromJson implements AddressProvider {
    private data;
    constructor(data: AddressMap);
    bLunaReward(): string;
    bLunaHub(): string;
    bLunaToken(): string;
    bEthReward(): string;
    bLunaValidatorsRegistry(): string;
    bEthToken(): string;
    market(): string;
    custody(_denom: MARKET_DENOMS, collateral: COLLATERAL_DENOMS): string;
    overseer(): string;
    aTerra(): string;
    oracle(): string;
    interest(): string;
    distribution(): string;
    liquidation(): string;
    liquidationQueue(): string;
    bLunaLunaPair(): string;
    bLunaLunaLPToken(): string;
    gov(): string;
    ancUstPair(): string;
    ancUstLPToken(): string;
    collector(): string;
    staking(): string;
    community(): string;
    distributor(): string;
    ANC(): string;
    airdrop(): string;
    investorLock(): string;
    teamLock(): string;
}
